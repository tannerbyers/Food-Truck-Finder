{"version":3,"sources":["Components/Header.js","Components/InfoWindow.js","Components/FoodTruckMarker.js","Components/SimpleMap.js","Components/ExtendedList.js","Components/ListedTrucks.js","Components/FindMeBtn.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","Jumbotron","fluid","Container","className","InfoWindow","style","position","bottom","left","width","backgroundColor","boxShadow","padding","fontSize","zIndex","content","Name","color","href","AddressLink","target","rel","Address","Hours","repeat","Price","FoodTruckmarker","_useState","useState","_useState2","Object","slicedToArray","setSelected","_useToggle","useToggle","_useToggle2","isOpen","toggleOpen","Fragment","Components_InfoWindow","index","result","onClick","console","log","src","height","lat","Lat","lng","Lng","text","alt","AnyReactComponent","_ref","SimpleMap","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onMarkerClick","setState","show","state","_this2","lib_default","bootstrapURLKeys","key","center","CurrentLocation","zoom","CurrentZoom","centered","SimpleMap_AnyReactComponent","Data","map","FoodTruckMarker","Component","defaultProps","ExtendedList","handleClick","Card","CardImg","data","ImgSrc","Menu","ListedTrucks","Components_ExtendedList","FindMeBtn","Button","getLocation","TestData","Location","App","bind","assertThisInitialized","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","error","Components_Header","FindMeBtn_FindMeBtn","Components_SimpleMap","Components_ListedTrucks","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"gSAqBeA,EAfA,SAAAC,GACb,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,OAAK,GACdJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAWD,OAAK,GACdJ,EAAAC,EAAAC,cAAA,MAAII,UAAU,aAAd,qBACAN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,QAAb,gGC2BOC,EAlCE,SAACR,GAahB,OAEJC,EAAAC,EAAAC,cAAA,OAAKM,MAduB,CACtBC,SAAU,WACTC,OAAQ,GACTC,KAAM,SACNC,MAAO,IACPC,gBAAiB,QACjBC,UAAW,mCACXC,QAAS,GACTC,SAAU,GACVC,OAAQ,MAMRjB,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEQ,SAAU,KACxBhB,EAAAC,EAAAC,cAAA,cAAMH,EAAMmB,QAAQC,KAApB,MAEAnB,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEQ,SAAU,KACtBhB,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAAEY,MAAO,UACpBpB,EAAAC,EAAAC,cAAA,KAAGmB,KAAMtB,EAAMmB,QAAQI,YAAaC,OAAO,SAASC,IAAI,uBAAuBzB,EAAMmB,QAAQO,WAGjGzB,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEQ,SAAU,GAAII,MAAO,SAChCrB,EAAMmB,QAAQQ,OAEjB1B,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEQ,SAAU,GAAII,MAAO,UAChC,IAAIO,OAAO5B,EAAMmB,QAAQU,kBCQnBC,EAhCS,SAAA9B,GAAS,IAAA+B,EAECC,mBAAS,IAFVC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEdK,GAFcH,EAAA,GAAAA,EAAA,IAAAI,EAGFC,cAHEC,EAAAL,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAGxBG,EAHwBD,EAAA,GAGhBE,EAHgBF,EAAA,GAa/B,OACEtC,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KACGF,GAAUvC,EAAAC,EAAAC,cAACwC,EAAD,CAAYC,MAAO5C,EAAM4C,MAAOzB,QAASnB,EAAM6C,SAC1D5C,EAAAC,EAAAC,cAAA,OACE2C,QAXgB,SAACF,GACrBG,QAAQC,IAAI,kBACZP,GAAYD,GACZJ,EAAY,CAAEQ,WASVrC,UAAU,kBACVY,QAASnB,EAAM6C,OAAOzB,KACtB6B,IAAI,0DACJC,OAAO,KACPrC,MAAM,KACNsC,IAAKnD,EAAMoD,IACXC,IAAKrD,EAAMsD,IACXC,KAAMvD,EAAM6C,OAAOzB,KACnBoC,IAAI,wBC3BNC,EAAoB,SAAAC,GAAA,IAAGH,EAAHG,EAAGH,KAAH,OAActD,EAAAC,EAAAC,cAAA,WAAMoD,IAGxCI,cACJ,SAAAA,EAAY3D,GAAO,IAAA4D,EAAA,OAAA1B,OAAA2B,EAAA,EAAA3B,CAAA4B,KAAAH,IACjBC,EAAA1B,OAAA6B,EAAA,EAAA7B,CAAA4B,KAAA5B,OAAA8B,EAAA,EAAA9B,CAAAyB,GAAAM,KAAAH,KAAM9D,KAcRkE,cAAgB,WACdnB,QAAQC,IAAI,kBACZY,EAAKO,SAAS,CACZC,MAAOR,EAAKS,MAAMD,OAEpBrB,QAAQC,IAAIY,EAAKS,MAAMD,OAlBvBR,EAAKS,MAAQ,CACXD,MAAM,GAHSR,sEAuBZ5D,GAAO,IAAAsE,EAAAR,KACZ,OAEE7D,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACbN,EAAAC,EAAAC,cAACoE,EAAArE,EAAD,CACEsE,iBAAkB,CAAEC,IA/Bd,2CAgCNC,OAAQZ,KAAK9D,MAAM2E,iBAAmBb,KAAK9D,MAAM0E,OACjDE,KAAMd,KAAK9D,MAAM6E,aAAef,KAAK9D,MAAM4E,MAE3C3E,EAAAC,EAAAC,cAAA,OACE8C,IAAI,2EACJO,IAAI,iBACJL,IACEW,KAAK9D,MAAM2E,gBAAgBG,SACvBhB,KAAK9D,MAAM2E,gBAAgBxB,IAC3B,KAENE,IACES,KAAK9D,MAAM2E,gBAAgBG,SACvBhB,KAAK9D,MAAM2E,gBAAgBtB,IAC3B,KAENH,OAAO,KACPrC,MAAM,OAERZ,EAAAC,EAAAC,cAAC4E,EAAD,CACE5B,IAAKW,KAAK9D,MAAM0E,OAAOvB,IACvBE,IAAKS,KAAK9D,MAAM0E,OAAOrB,IACvBE,KAAK,WACLL,OAAO,KACPrC,MAAM,OAGPiD,KAAK9D,MAAMgF,KAAKC,IAAI,SAACpC,EAAQD,GAAT,OACnB3C,EAAAC,EAAAC,cAAC+E,EAAD,CACEtC,MAAOA,EACPwB,KAAME,EAAKD,MAAMD,KACjBF,cAAeI,EAAKJ,cACpBrB,OAAQA,EACRM,IAAKN,EAAOO,IACZC,IAAKR,EAAOS,iBAhEF6B,aAAlBxB,EAQGyB,aAAe,CACpBV,OAAQ,CACNvB,IAAK,UACLE,KAAM,WAERuB,KAAM,IA4DKjB,wBCLA0B,EAxEM,SAAArF,GAAS,IAAAqC,EACCC,cADDC,EAAAL,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GACrBG,EADqBD,EAAA,GACbE,EADaF,EAAA,GAGtB+C,EAAc,SAAA1C,GAClBH,GAAYD,GACZO,QAAQC,IAAI,mBAGd,OACE/C,EAAAC,EAAAC,cAACF,EAAAC,EAAMwC,SAAP,KACEzC,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAMhF,UAAU,WACdN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAS1C,QAASwC,EAAarC,IAAKjD,EAAMyF,KAAKC,SAC/CzF,EAAAC,EAAAC,cAAA,MAAI2C,QAASwC,GAActF,EAAMyF,KAAKrE,OAGxCnB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,uBACbN,EAAAC,EAAAC,cAAA,WACGqC,EACCvC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEmB,KAAMtB,EAAMyF,KAAKlE,YACjBE,IAAI,sBACJD,OAAO,UAHT,YAQA,KACHgB,EACCvC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEmB,KAAMtB,EAAMyF,KAAKE,KACjBlE,IAAI,sBACJD,OAAO,UAHT,SAQA,OAIRvB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACbN,EAAAC,EAAAC,cAAA,MAAI2C,QAASwC,GAActF,EAAMyF,KAAKrE,MACtCnB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEmB,KAAMtB,EAAMyF,KAAKlE,YACjBE,IAAI,sBACJD,OAAO,UAHT,YAQFvB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACEmB,KAAMtB,EAAMyF,KAAKE,KACjBlE,IAAI,sBACJD,OAAO,UAHT,cCvCCoE,EAhBM,SAAA5F,GACnB,OACEC,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2DAEFF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,yBACJF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACZP,EAAMgF,KAAKC,IAAI,SAACpC,EAAQD,GAAT,OACd3C,EAAAC,EAAAC,cAAC0F,EAAD,CAAcjD,MAAOA,EAAO6C,KAAM5C,iBCZvBiD,iLACZ9F,GACL,OACEC,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAQ1E,MAAM,UAAUyB,QAASgB,KAAK9D,MAAMgG,aAC1C/F,EAAAC,EAAAC,cAAA,sCAL6BgF,aCIjCc,SAAW,CACf,CACE7E,KAAM,iBACN8E,SAAU,CAAC,WAAY,WACvBP,KAAM,kCACNhE,MAAO,aACPyB,IAAK,UACLE,KAAM,UACN/B,YAAa,wCACbG,QAAS,gBACTG,MAAO,EACP6D,OACE,2LAEJ,CACEtE,KAAM,cACN8E,SAAU,CAAC,WAAY,WACvBP,KAAM,qCACNhE,MAAO,aACPyB,IAAK,SACLE,KAAM,SACN/B,YAAa,wCACbG,QAAS,2BACTG,MAAO,EACP6D,OACE,yHAEJ,CACEtE,KAAM,cACN8E,SAAU,CAAC,WAAY,WACvBP,KAAM,gDACNhE,MAAO,aACPyB,IAAK,SACLE,KAAM,SACN/B,YAAa,wCACbG,QAAS,sDACTG,MAAO,EACP6D,OACA,wCAiDWS,cA5Cb,SAAAA,EAAYnG,GAAO,IAAA4D,EAAA,OAAA1B,OAAA2B,EAAA,EAAA3B,CAAA4B,KAAAqC,IACjBvC,EAAA1B,OAAA6B,EAAA,EAAA7B,CAAA4B,KAAA5B,OAAA8B,EAAA,EAAA9B,CAAAiE,GAAAlC,KAAAH,KAAM9D,KACDqE,MAAQ,CACXlB,IAAK,UACLE,KAAM,UACNuB,KAAM,KACNE,UAAU,GAEZlB,EAAKoC,YAAcpC,EAAKoC,YAAYI,KAAjBlE,OAAAmE,EAAA,EAAAnE,QAAAmE,EAAA,EAAAnE,CAAA0B,KARFA,6EAWL,IAAAU,EAAAR,KACZwC,UAAUC,YAAYC,mBACpB,SAAA9F,GACE4D,EAAKH,SAAS,CACZhB,IAAKzC,EAAS+F,OAAOC,SACrBrD,IAAK3C,EAAS+F,OAAOE,UACrB/B,KAAM,GACNE,UAAWR,EAAKD,MAAMS,YAG1B,SAAA8B,GAAK,OAAI7D,QAAQC,IAAI4D,sCAKvB,OACE3G,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAC0G,EAAD,MACA5G,EAAAC,EAAAC,cAAC2G,EAAD,CAAWd,YAAalC,KAAKkC,cAC7B/F,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC4G,EAAD,CACAxG,UAAU,MACRsE,YAAaf,KAAKO,MAAMO,KACxBD,gBAAiBb,KAAKO,MACtBW,KAAMiB,IAERhG,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAC6G,EAAD,CAAchC,KAAMiB,YAvCVd,aCxCE8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtH,EAAAC,EAAAC,cAACqH,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBpB,WACrBA,UAAUqB,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.159fc26d.chunk.js","sourcesContent":["/*jshint esversion: 6 */\r\n\r\nimport React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Jumbotron, Container } from \"reactstrap\";\r\n\r\nconst Header = props => {\r\n  return (\r\n    <div>\r\n      <Jumbotron fluid>\r\n        <Container fluid>\r\n          <h1 className=\"display-3\">Food Truck Finder</h1>\r\n          <p className=\"lead\">\r\n            Find nearby foodtrucks with our realtime Food Truck Locater App!\r\n          </p>\r\n        </Container>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","/*jshint esversion: 6 */\r\n\r\nimport React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst InfoWindow = (props) => {\r\n    const infoWindowStyle = {\r\n      position: 'absolute',\r\n       bottom: 20,\r\n      left: '-180px',\r\n      width: 400,\r\n      backgroundColor: 'white',\r\n      boxShadow: '0 2px 7px 1px rgba(0, 0, 0, 0.3)',\r\n      padding: 10,\r\n      fontSize: 14,\r\n      zIndex: 100,\r\n    };\r\n  \r\n    return (\r\n        \r\n<div style={infoWindowStyle}>\r\n      <div style={{ fontSize: 16 }}>\r\n      <h3> {props.content.Name} </h3>\r\n      </div>\r\n      <div style={{ fontSize: 14 }}>\r\n        <span style={{ color: 'black' }}>\r\n          <a href={props.content.AddressLink} target=\"_blank\" rel=\"noopener noreferrer\">{props.content.Address}</a>\r\n        </span>\r\n      </div>\r\n      <div style={{ fontSize: 14, color: 'grey' }}>\r\n        {props.content.Hours}\r\n      </div>\r\n      <div style={{ fontSize: 14, color: 'green' }}>\r\n        {'$'.repeat(props.content.Price)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n  export default InfoWindow;\r\n","/*jshint esversion: 6 */\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport InfoWindow from \"./InfoWindow\";\r\nimport { useToggle } from \"@availity/hooks\";\r\n\r\nimport \"../index.css\";\r\n\r\nconst FoodTruckmarker = props => {\r\n\r\n  const [selected, setSelected] = useState({});\r\n  const [isOpen, toggleOpen] = useToggle();\r\n\r\n\r\n  const onMarkerClick = (index) => {\r\n    console.log(\"Marker Clicked\");\r\n    toggleOpen(!isOpen);\r\n    setSelected({ index });\r\n  };\r\n\r\n\r\n  return (\r\n    <React.Fragment >\r\n      {isOpen && <InfoWindow index={props.index} content={props.result} />}\r\n      <img\r\n        onClick={onMarkerClick}\r\n        className=\"FoodTruckmarker\"\r\n        content={props.result.Name}\r\n        src=\"http://wherethatfoodtruck.com/graphics/default/logo.png\"\r\n        height=\"42\"\r\n        width=\"35\"\r\n        lat={props.Lat}\r\n        lng={props.Lng}\r\n        text={props.result.Name}\r\n        alt=\"FoodTruck Markers\"\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FoodTruckmarker;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport FoodTruckmarker from \"./FoodTruckMarker\";\r\n\r\nimport \"../index.css\";\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\nconst API_KEY = \"AIzaSyAOEsdFfHB05mHHfRn0bsfENp8mZ1qIGO0\";\r\n\r\nclass SimpleMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false\r\n    };\r\n  }\r\n\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 30.237247,\r\n      lng: -81.519488\r\n    },\r\n    zoom: 11\r\n  };\r\n\r\n  onMarkerClick = () => {\r\n    console.log(\"Marker Clicked\");\r\n    this.setState({\r\n      show: !this.state.show\r\n    });\r\n    console.log(this.state.show);\r\n  };\r\n\r\n  render(props) {\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div className=\"container-fluid Map\">\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: API_KEY }}\r\n          center={this.props.CurrentLocation || this.props.center}\r\n          zoom={this.props.CurrentZoom || this.props.zoom}\r\n        >\r\n          <img\r\n            src=\"http://pluspng.com/img-png/you-are-here-png-hd-you-are-here-icon-512.png\"\r\n            alt=\"youarehereicon\"\r\n            lat={\r\n              this.props.CurrentLocation.centered\r\n                ? this.props.CurrentLocation.lat\r\n                : null\r\n            }\r\n            lng={\r\n              this.props.CurrentLocation.centered\r\n                ? this.props.CurrentLocation.lng\r\n                : null\r\n            }\r\n            height=\"60\"\r\n            width=\"60\"\r\n          />\r\n          <AnyReactComponent\r\n            lat={this.props.center.lat}\r\n            lng={this.props.center.lng}\r\n            text=\"Availity\"\r\n            height=\"40\"\r\n            width=\"40\"\r\n          />\r\n\r\n          {this.props.Data.map((result, index) => (\r\n            <FoodTruckmarker\r\n              index={index}\r\n              show={this.state.show}\r\n              onMarkerClick={this.onMarkerClick}\r\n              result={result}\r\n              lat={result.Lat}\r\n              lng={result.Lng}\r\n            />\r\n          ))}\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleMap;\r\n","/*jshint esversion: 6 */\r\n\r\nimport React from \"react\";\r\nimport { useToggle } from \"@availity/hooks\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { CardImg, Card } from \"reactstrap\";\r\n\r\nconst ExtendedList = props => {\r\n  const [isOpen, toggleOpen] = useToggle();\r\n\r\n  const handleClick = index => {\r\n    toggleOpen(!isOpen);\r\n    console.log(\"table selected\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card className=\"thecard\">\r\n        <div className=\"thefront\">\r\n          <CardImg onClick={handleClick} src={props.data.ImgSrc} />\r\n          <h2 onClick={handleClick}>{props.data.Name}</h2>\r\n        </div>\r\n        {/*  For Mobile Devices */}\r\n        <div className=\"MobileFoodtruckList\">\r\n          <div>\r\n            {isOpen ? (\r\n              <h3>\r\n                <a\r\n                  href={props.data.AddressLink}\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                >\r\n                  Address\r\n                </a>\r\n              </h3>\r\n            ) : null}\r\n            {isOpen ? (\r\n              <h3>\r\n                <a\r\n                  href={props.data.Menu}\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                >\r\n                  Menu\r\n                </a>\r\n              </h3>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        {/*  For Desktop Sceens */}\r\n        <div className=\"theback\">\r\n          <h1 onClick={handleClick}>{props.data.Name}</h1>\r\n          <br />\r\n          <div>\r\n            <h3>\r\n              <a\r\n                href={props.data.AddressLink}\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                Address\r\n              </a>\r\n            </h3>\r\n            <h3>\r\n              <a\r\n                href={props.data.Menu}\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                Menu\r\n              </a>\r\n            </h3>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ExtendedList;\r\n","/*jshint esversion: 6 */\r\n\r\nimport {Container} from \"reactstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport ExtendedList from \"./ExtendedList\";\r\nimport React from \"react\";\r\n\r\nimport \"../index.css\";\r\n\r\nconst ListedTrucks = props => {\r\n  return (\r\n    <Container >\r\n      <h3>\r\n        <b> 🚚Today's Food Trucks🚚 </b>\r\n      </h3>\r\n      <h5><i>(list view)</i></h5>\r\n      <div className=\"TruckList\">\r\n        {props.Data.map((result, index) => (\r\n          <ExtendedList index={index} data={result} />\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ListedTrucks;\r\n","/*jshint esversion: 6 */\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Button, Container } from \"reactstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport default class FindMeBtn extends Component {\r\n  render(props) {\r\n    return (\r\n      <Container>\r\n        <Button color=\"primary\" onClick={this.props.getLocation}>\r\n          <h3>Use My Location</h3>\r\n        </Button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","/*jshint esversion: 6 */\r\n\r\nimport React, { Component } from \"react\";\r\nimport Header from \"./Components/Header\";\r\nimport Footer from \"./Components/Footer\";\r\nimport SimpleMap from \"./Components/SimpleMap\";\r\nimport ListedTrucks from \"./Components/ListedTrucks\";\r\nimport FindMeBtn from \"./Components/FindMeBtn\";\r\nimport \"./App.css\";\r\nimport \"./index.css\";\r\nconst TestData = [\r\n  {\r\n    Name: \"Sweeto Burrito\",\r\n    Location: [30.237247, -81.519488],\r\n    Menu: \"https://sweetoburrito.com/menu/\",\r\n    Hours: \"12AM - 8PM\",\r\n    Lat: 30.287064,\r\n    Lng: -81.548977,\r\n    AddressLink: \"https://goo.gl/maps/muJ1x7rneTFNWMCj6\",\r\n    Address: \"Random Street\",\r\n    Price: 5,\r\n    ImgSrc:\r\n      \"https://scontent-mia3-1.xx.fbcdn.net/v/t1.0-9/16684326_1647846598850794_8907527528520582985_n.jpg?_nc_cat=100&_nc_ht=scontent-mia3-1.xx&oh=40214ff8bc9ded15acda85198825bdd2&oe=5D762C08\"\r\n  },\r\n  {\r\n    Name: \"Rite on Que\",\r\n    Location: [30.237247, -81.519488],\r\n    Menu: \"http://www.riteonque.com/menu.html\",\r\n    Hours: \"10AM - 6PM\",\r\n    Lat: 30.245050,\r\n    Lng: -81.540540,\r\n    AddressLink: \"https://goo.gl/maps/zEwtZFM8Kb6vhU4K8\",\r\n    Address: \"10550 Deerwood Lake Blvd\",\r\n    Price: 2,\r\n    ImgSrc:\r\n      \"http://nebula.wsimg.com/0a07d20da49a3814e66d49cb2fdb7873?AccessKeyId=F868C14ED52F37E941A9&disposition=0&alloworigin=1\"\r\n  },\r\n  {\r\n    Name: \"Alma Fusion\",\r\n    Location: [30.237247, -81.519488],\r\n    Menu: \"https://www.eatalmafusion.com/online-ordering\",\r\n    Hours: \"11AM - 2PM\",\r\n    Lat: 30.215030,\r\n    Lng: -81.578750,\r\n    AddressLink: \"https://goo.gl/maps/2RXarZDqrxokM4hW9\",\r\n    Address: \"8335 Freedom Crossing Trail, Jacksonville, FL 32256\",\r\n    Price: 3,\r\n    ImgSrc:\r\n    \"http://i68.tinypic.com/2ag6wew.jpg\"\r\n  }\r\n];\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lat: 30.237247,\r\n      lng: -81.519488,\r\n      zoom: null,\r\n      centered: false\r\n    };\r\n    this.getLocation = this.getLocation.bind(this);\r\n  }\r\n\r\n  getLocation() {\r\n    navigator.geolocation.getCurrentPosition(\r\n      position => {\r\n        this.setState({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n          zoom: 14,\r\n          centered: !this.state.centered\r\n        });\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <FindMeBtn getLocation={this.getLocation} />\r\n        <br />\r\n        <SimpleMap\r\n        className=\"Map\"\r\n          CurrentZoom={this.state.zoom}\r\n          CurrentLocation={this.state}\r\n          Data={TestData}\r\n        />\r\n        <b />\r\n        <ListedTrucks Data={TestData} /> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}